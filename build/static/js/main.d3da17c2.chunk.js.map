{"version":3,"sources":["utils/DataAreaContext.js","components/BodyData.js","components/TableData.js","components/Search.js","components/NavBar.js","utils/API.js","components/empData.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","BodyData","context","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","key","uuid","data-th","className","src","medium","alt","first","last","href","target","TableData","id","headings","width","style","onClick","handleSort","Search","type","placeholder","aria-label","onChange","e","handleSearchChange","NavBar","data-toggle","data-target","aria-controls","aria-expanded","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","console","log","data","Provider","value","event","filter","filteredList","item","values","toLowerCase","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","updatedHeadings","length","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d3da17c2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DataAreaContext = React.createContext({\r\n\r\n});\r\n\r\nexport default DataAreaContext;","\r\nimport React, { useContext } from \"react\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\n\r\nconst BodyData = () => {\r\n    const context = useContext(DataAreaContext);\r\n\r\n    return (\r\n        // The <tbody> element is used to specify the body part of a table\r\n        <tbody>\r\n            {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\r\n                context.developerState.filteredUsers.map(({ login, name, picture, phone, email }) => (\r\n                    <tr key={login.uuid}>\r\n                        <td data-th=\"Image\" className=\"align-middle\">\r\n                            <img\r\n                                src={picture.medium}\r\n                                alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                                className=\"img-responsive\" />\r\n                        </td>\r\n                        <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                            {name.first} {name.last}\r\n                        </td>\r\n                        <td data-th=\"Phone\" className=\"align-middle\">\r\n                            {phone}\r\n                        </td>\r\n                        <td data-th=\"Email\" className=\"align-middle\">\r\n                            <a href={\"mailto:\" + email} target=\"__blank\">\r\n                                {email}\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                ))\r\n            ) : (\r\n                <></>\r\n            )}\r\n            </tbody>\r\n        );\r\n}\r\n\r\nexport default BodyData;","import React, { useContext } from \"react\";\r\nimport BodyData from \"./BodyData\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\n\r\n\r\nconst TableData = () => {\r\n    const context = useContext(DataAreaContext);\r\n  \r\n    return (\r\n  \r\n      <div className=\"datatable mt-5\">\r\n            <table\r\n                id=\"table\"\r\n                className=\"table table-striped table-hover table-condensed\"\r\n            >\r\n            <thead>\r\n                <tr>\r\n                {context.developerState.headings.map(({ name, width }) => {\r\n                    return (\r\n                        <th\r\n                            className=\"col\"\r\n                            key={name}\r\n                            style={{ width }}\r\n                            onClick={() => {\r\n                                context.handleSort(name);\r\n                            }}\r\n                        >\r\n                            {name}\r\n                        <span className=\"pointer\"></span>\r\n                    </th>\r\n                    );\r\n                })}\r\n                </tr>\r\n            </thead>\r\n  \r\n            <BodyData />\r\n            </table>\r\n        </div>\r\n        );\r\n    }\r\n  \r\n  export default TableData;","import React, { useContext } from \"react\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\n\r\nconst Search = () => {\r\n    const context = useContext(DataAreaContext);\r\n\r\n    return (\r\n        <div className=\"searchbox\">\r\n            <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\" id=\"\">\r\n                    SEARCH\r\n                    </span>\r\n                </div>\r\n                <input\r\n                className=\"form-control mr-sm-2\"\r\n                type=\"search\"\r\n                placeholder=\"Employee Name\"\r\n                aria-label=\"Search\"\r\n                onChange={e => context.handleSearchChange(e)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Search;","import React from \"react\";\r\nimport Search from \"./Search.js\";\r\nimport \"../styles/NavBar.css\"\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n            >\r\n            <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n        <div className=\"collapse navbar-collapse row\" id=\"navbarNav\">\r\n            {}\r\n            <div className=\"search-area col-4\">\r\n                <Search />\r\n            </div>\r\n        </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default NavBar;","  \r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all users\r\n  getUsers: function() {\r\n\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n  }\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport TableData from \"./TableData\";\r\nimport NavBar from \"./NavBar\";\r\nimport API from \"../utils/API\";\r\nimport \"../styles/empData.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\n\r\nconst DataArea = () => {\r\n  const [developerState, setDeveloperState] = useState({\r\n    users: [],\r\n    order: \"descend\",\r\n    filteredUsers: [],\r\n    headings: [\r\n      { name: \"Image\", width: \"5%\", order: \"descend\" },\r\n      { name: \"name\", width: \"5%\", order: \"descend\" },\r\n      { name: \"phone\", width: \"5%\", order: \"descend\" },\r\n      { name: \"email\", width: \"5%\", order: \"descend\" }\r\n    ]\r\n  });\r\n\r\n  const handleSort = heading => {\r\n    let currentOrder = developerState.headings\r\n      .filter(elem => elem.name === heading)\r\n      .map(elem => elem.order)\r\n      .toString();\r\n\r\n    if (currentOrder === \"descend\") {\r\n      currentOrder = \"ascend\";\r\n    } else {\r\n      currentOrder = \"descend\";\r\n    }\r\n\r\n    const compareFnc = (a, b) => {\r\n      if (currentOrder === \"ascend\") {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return a[heading].first.localeCompare(b[heading].first);\r\n        } else {\r\n          return a[heading].localeCompare(b[heading]);\r\n        }\r\n      } else {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return b[heading].first.localeCompare(a[heading].first);\r\n        }  else {\r\n          return b[heading].localeCompare(a[heading]);\r\n        }\r\n      }\r\n    };\r\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n    const updatedHeadings = developerState.headings.map(elem => {\r\n      elem.order = elem.name === heading ? currentOrder : elem.order;\r\n      return elem;\r\n    });\r\n\r\n    setDeveloperState({\r\n      ...developerState,\r\n      filteredUsers: sortedUsers,\r\n      headings: updatedHeadings\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = event => {\r\n    const filter = event.target.value;\r\n    // eslint-disable-next-line array-callback-return\r\n    const filteredList = developerState.users.filter(item => {\r\n      let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\r\n      console.log(filter, values)\r\n    if(values.indexOf(filter.toLowerCase()) !== -1){\r\n      return item\r\n    };\r\n    });\r\n\r\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.getUsers().then(results => {\r\n      console.log(results.data.results);\r\n      setDeveloperState({\r\n        ...developerState,\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results\r\n      });\r\n    });\r\n  }, ['']);\r\n\r\n  return (\r\n    <DataAreaContext.Provider\r\n      value={{ developerState, handleSearchChange, handleSort }}\r\n    >\r\n      <NavBar />\r\n      <div className=\"data-area\">\r\n        {developerState.filteredUsers.length > 0 ? <TableData /> : <div></div>}\r\n      </div>\r\n    </DataAreaContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataArea;","import React from \"react\";\r\nimport DataArea from \"./empData\";\r\nimport \"../styles/Main.css\";\r\n\r\n\r\nfunction Main () {\r\n    return (\r\n        <>\r\n            <DataArea />\r\n        </>\r\n        );\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Wrapper({ children }) {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            { children }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport \"../styles/Header.css\";\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Employee Directory</h1>\r\n            <p>Use Search Box below to find employee by name, or click on category header to reverse the order of the list.</p>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}